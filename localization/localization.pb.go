// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.24.0-devel
// 	protoc        v3.12.1
// source: localization/localization.proto

package localProto

import (
	common "github.com/cargod-bj/b2c-proto-common/common"
	proto "github.com/golang/protobuf/proto"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

// 新增本地化翻译dto
type LocalizationDto struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// id，如果为新增，则此字段为0，否则为id
	Id uint64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	// 创建时间，如果为新增，或更新，则此字段无效
	CreateTime uint64 `protobuf:"varint,2,opt,name=create_time,json=createTime,proto3" json:"create_time,omitempty"`
	// 更新时间，如果为新增，或更新，则此字段无效
	UpdateTime uint64 `protobuf:"varint,3,opt,name=update_time,json=updateTime,proto3" json:"update_time,omitempty"`
	// 当前key的描述信息, 如果为更新，则此字段无效
	Name string `protobuf:"bytes,4,opt,name=name,proto3" json:"name,omitempty"`
	// 当前翻译的key, 如果为更新，则此字段无效
	Key string `protobuf:"bytes,5,opt,name=key,proto3" json:"key,omitempty"`
	// 当前翻译的最大长度
	MaxLength uint32 `protobuf:"varint,6,opt,name=max_length,json=maxLength,proto3" json:"max_length,omitempty"`
	// 是否后台可用
	FlagBe uint32 `protobuf:"varint,7,opt,name=flag_be,json=flagBe,proto3" json:"flag_be,omitempty"`
	// 是否前台可用
	FlagFe uint32 `protobuf:"varint,8,opt,name=flag_fe,json=flagFe,proto3" json:"flag_fe,omitempty"`
	// 是否网站可用
	FlagWebsite uint32 `protobuf:"varint,9,opt,name=flag_website,json=flagWebsite,proto3" json:"flag_website,omitempty"`
	// 是否app可用
	FlagApp uint32 `protobuf:"varint,10,opt,name=flag_app,json=flagApp,proto3" json:"flag_app,omitempty"`
	// 当前翻译: 英语
	LangEn string `protobuf:"bytes,201,opt,name=lang_en,json=langEn,proto3" json:"lang_en,omitempty"`
	// 当前翻译: 马来语
	LangMs string `protobuf:"bytes,202,opt,name=lang_ms,json=langMs,proto3" json:"lang_ms,omitempty"`
	// 当前翻译: 印度尼西亚语
	LangId string `protobuf:"bytes,203,opt,name=lang_id,json=langId,proto3" json:"lang_id,omitempty"`
	// 当前翻译: 泰语
	LangTh string `protobuf:"bytes,204,opt,name=lang_th,json=langTh,proto3" json:"lang_th,omitempty"`
	// 当前翻译: 印地语
	LangHi string `protobuf:"bytes,205,opt,name=lang_hi,json=langHi,proto3" json:"lang_hi,omitempty"`
	// 当前翻译: 中文
	LangZh string `protobuf:"bytes,206,opt,name=lang_zh,json=langZh,proto3" json:"lang_zh,omitempty"`
}

func (x *LocalizationDto) Reset() {
	*x = LocalizationDto{}
	if protoimpl.UnsafeEnabled {
		mi := &file_localization_localization_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LocalizationDto) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LocalizationDto) ProtoMessage() {}

func (x *LocalizationDto) ProtoReflect() protoreflect.Message {
	mi := &file_localization_localization_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LocalizationDto.ProtoReflect.Descriptor instead.
func (*LocalizationDto) Descriptor() ([]byte, []int) {
	return file_localization_localization_proto_rawDescGZIP(), []int{0}
}

func (x *LocalizationDto) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *LocalizationDto) GetCreateTime() uint64 {
	if x != nil {
		return x.CreateTime
	}
	return 0
}

func (x *LocalizationDto) GetUpdateTime() uint64 {
	if x != nil {
		return x.UpdateTime
	}
	return 0
}

func (x *LocalizationDto) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *LocalizationDto) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *LocalizationDto) GetMaxLength() uint32 {
	if x != nil {
		return x.MaxLength
	}
	return 0
}

func (x *LocalizationDto) GetFlagBe() uint32 {
	if x != nil {
		return x.FlagBe
	}
	return 0
}

func (x *LocalizationDto) GetFlagFe() uint32 {
	if x != nil {
		return x.FlagFe
	}
	return 0
}

func (x *LocalizationDto) GetFlagWebsite() uint32 {
	if x != nil {
		return x.FlagWebsite
	}
	return 0
}

func (x *LocalizationDto) GetFlagApp() uint32 {
	if x != nil {
		return x.FlagApp
	}
	return 0
}

func (x *LocalizationDto) GetLangEn() string {
	if x != nil {
		return x.LangEn
	}
	return ""
}

func (x *LocalizationDto) GetLangMs() string {
	if x != nil {
		return x.LangMs
	}
	return ""
}

func (x *LocalizationDto) GetLangId() string {
	if x != nil {
		return x.LangId
	}
	return ""
}

func (x *LocalizationDto) GetLangTh() string {
	if x != nil {
		return x.LangTh
	}
	return ""
}

func (x *LocalizationDto) GetLangHi() string {
	if x != nil {
		return x.LangHi
	}
	return ""
}

func (x *LocalizationDto) GetLangZh() string {
	if x != nil {
		return x.LangZh
	}
	return ""
}

// 获取指定类型的所有dto
type LocalizationWhereDto struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 是否获取所有
	IsAll bool `protobuf:"varint,100,opt,name=isAll,proto3" json:"isAll,omitempty"`
	// 是否获取所有语言，可以和Platform一起使用
	IsAllLang bool `protobuf:"varint,101,opt,name=isAllLang,proto3" json:"isAllLang,omitempty"`
	// 是否获取所有平台，可以和Lang一起使用
	IsAllPlatform bool `protobuf:"varint,102,opt,name=isAllPlatform,proto3" json:"isAllPlatform,omitempty"`
	// 是否获取后台内容，可以和Lang一起使用
	IsPlatformBe bool `protobuf:"varint,1,opt,name=isPlatformBe,proto3" json:"isPlatformBe,omitempty"`
	// 是否获取前台内容，可以和Lang一起使用
	IsPlatformFe bool `protobuf:"varint,2,opt,name=isPlatformFe,proto3" json:"isPlatformFe,omitempty"`
	// 是否获取网页端内容，可以和Lang一起使用
	IsPlatformWebsite bool `protobuf:"varint,3,opt,name=isPlatformWebsite,proto3" json:"isPlatformWebsite,omitempty"`
	// 是否获取app端内容，可以和Lang一起使用
	IsPlatformApp bool `protobuf:"varint,4,opt,name=isPlatformApp,proto3" json:"isPlatformApp,omitempty"`
	// 是否获取英语内容，可以和Platform一起使用
	IsLangEn bool `protobuf:"varint,11,opt,name=isLangEn,proto3" json:"isLangEn,omitempty"`
	// 是否获取马来语内容，可以和Platform一起使用
	IsLangMs bool `protobuf:"varint,12,opt,name=isLangMs,proto3" json:"isLangMs,omitempty"`
	// 是否获取印度尼西亚语内容，可以和Platform一起使用
	IsLangId bool `protobuf:"varint,13,opt,name=isLangId,proto3" json:"isLangId,omitempty"`
	// 是否获取泰语内容，可以和Platform一起使用
	IsLangTh bool `protobuf:"varint,14,opt,name=isLangTh,proto3" json:"isLangTh,omitempty"`
	// 是否获取印地语内容，可以和Platform一起使用
	IsLangHi bool `protobuf:"varint,15,opt,name=isLangHi,proto3" json:"isLangHi,omitempty"`
	// 是否获取中文内容，可以和Platform一起使用
	IsLangZh bool `protobuf:"varint,16,opt,name=isLangZh,proto3" json:"isLangZh,omitempty"`
}

func (x *LocalizationWhereDto) Reset() {
	*x = LocalizationWhereDto{}
	if protoimpl.UnsafeEnabled {
		mi := &file_localization_localization_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LocalizationWhereDto) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LocalizationWhereDto) ProtoMessage() {}

func (x *LocalizationWhereDto) ProtoReflect() protoreflect.Message {
	mi := &file_localization_localization_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LocalizationWhereDto.ProtoReflect.Descriptor instead.
func (*LocalizationWhereDto) Descriptor() ([]byte, []int) {
	return file_localization_localization_proto_rawDescGZIP(), []int{1}
}

func (x *LocalizationWhereDto) GetIsAll() bool {
	if x != nil {
		return x.IsAll
	}
	return false
}

func (x *LocalizationWhereDto) GetIsAllLang() bool {
	if x != nil {
		return x.IsAllLang
	}
	return false
}

func (x *LocalizationWhereDto) GetIsAllPlatform() bool {
	if x != nil {
		return x.IsAllPlatform
	}
	return false
}

func (x *LocalizationWhereDto) GetIsPlatformBe() bool {
	if x != nil {
		return x.IsPlatformBe
	}
	return false
}

func (x *LocalizationWhereDto) GetIsPlatformFe() bool {
	if x != nil {
		return x.IsPlatformFe
	}
	return false
}

func (x *LocalizationWhereDto) GetIsPlatformWebsite() bool {
	if x != nil {
		return x.IsPlatformWebsite
	}
	return false
}

func (x *LocalizationWhereDto) GetIsPlatformApp() bool {
	if x != nil {
		return x.IsPlatformApp
	}
	return false
}

func (x *LocalizationWhereDto) GetIsLangEn() bool {
	if x != nil {
		return x.IsLangEn
	}
	return false
}

func (x *LocalizationWhereDto) GetIsLangMs() bool {
	if x != nil {
		return x.IsLangMs
	}
	return false
}

func (x *LocalizationWhereDto) GetIsLangId() bool {
	if x != nil {
		return x.IsLangId
	}
	return false
}

func (x *LocalizationWhereDto) GetIsLangTh() bool {
	if x != nil {
		return x.IsLangTh
	}
	return false
}

func (x *LocalizationWhereDto) GetIsLangHi() bool {
	if x != nil {
		return x.IsLangHi
	}
	return false
}

func (x *LocalizationWhereDto) GetIsLangZh() bool {
	if x != nil {
		return x.IsLangZh
	}
	return false
}

// 指定发布类型，如果不设置，默认发布所有
type LocalizationPublishDto struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *LocalizationPublishDto) Reset() {
	*x = LocalizationPublishDto{}
	if protoimpl.UnsafeEnabled {
		mi := &file_localization_localization_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LocalizationPublishDto) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LocalizationPublishDto) ProtoMessage() {}

func (x *LocalizationPublishDto) ProtoReflect() protoreflect.Message {
	mi := &file_localization_localization_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LocalizationPublishDto.ProtoReflect.Descriptor instead.
func (*LocalizationPublishDto) Descriptor() ([]byte, []int) {
	return file_localization_localization_proto_rawDescGZIP(), []int{2}
}

var File_localization_localization_proto protoreflect.FileDescriptor

var file_localization_localization_proto_rawDesc = []byte{
	0x0a, 0x1f, 0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2f, 0x6c,
	0x6f, 0x63, 0x61, 0x6c, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x12, 0x0c, 0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x1a,
	0x39, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x63, 0x61, 0x72, 0x67,
	0x6f, 0x64, 0x2d, 0x62, 0x6a, 0x2f, 0x62, 0x32, 0x63, 0x2d, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2d,
	0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2f, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2f, 0x63, 0x6f,
	0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xb4, 0x03, 0x0a, 0x0f, 0x4c,
	0x6f, 0x63, 0x61, 0x6c, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x74, 0x6f, 0x12, 0x0e,
	0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1f,
	0x0a, 0x0b, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x04, 0x52, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12,
	0x1f, 0x0a, 0x0b, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x04, 0x52, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65,
	0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x1d, 0x0a, 0x0a, 0x6d, 0x61, 0x78, 0x5f, 0x6c, 0x65,
	0x6e, 0x67, 0x74, 0x68, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x6d, 0x61, 0x78, 0x4c,
	0x65, 0x6e, 0x67, 0x74, 0x68, 0x12, 0x17, 0x0a, 0x07, 0x66, 0x6c, 0x61, 0x67, 0x5f, 0x62, 0x65,
	0x18, 0x07, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x66, 0x6c, 0x61, 0x67, 0x42, 0x65, 0x12, 0x17,
	0x0a, 0x07, 0x66, 0x6c, 0x61, 0x67, 0x5f, 0x66, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x06, 0x66, 0x6c, 0x61, 0x67, 0x46, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x66, 0x6c, 0x61, 0x67, 0x5f,
	0x77, 0x65, 0x62, 0x73, 0x69, 0x74, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0b, 0x66,
	0x6c, 0x61, 0x67, 0x57, 0x65, 0x62, 0x73, 0x69, 0x74, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x66, 0x6c,
	0x61, 0x67, 0x5f, 0x61, 0x70, 0x70, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x07, 0x66, 0x6c,
	0x61, 0x67, 0x41, 0x70, 0x70, 0x12, 0x18, 0x0a, 0x07, 0x6c, 0x61, 0x6e, 0x67, 0x5f, 0x65, 0x6e,
	0x18, 0xc9, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6c, 0x61, 0x6e, 0x67, 0x45, 0x6e, 0x12,
	0x18, 0x0a, 0x07, 0x6c, 0x61, 0x6e, 0x67, 0x5f, 0x6d, 0x73, 0x18, 0xca, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x06, 0x6c, 0x61, 0x6e, 0x67, 0x4d, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x6c, 0x61, 0x6e,
	0x67, 0x5f, 0x69, 0x64, 0x18, 0xcb, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6c, 0x61, 0x6e,
	0x67, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x6c, 0x61, 0x6e, 0x67, 0x5f, 0x74, 0x68, 0x18, 0xcc,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6c, 0x61, 0x6e, 0x67, 0x54, 0x68, 0x12, 0x18, 0x0a,
	0x07, 0x6c, 0x61, 0x6e, 0x67, 0x5f, 0x68, 0x69, 0x18, 0xcd, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x06, 0x6c, 0x61, 0x6e, 0x67, 0x48, 0x69, 0x12, 0x18, 0x0a, 0x07, 0x6c, 0x61, 0x6e, 0x67, 0x5f,
	0x7a, 0x68, 0x18, 0xce, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6c, 0x61, 0x6e, 0x67, 0x5a,
	0x68, 0x22, 0xb4, 0x03, 0x0a, 0x14, 0x4c, 0x6f, 0x63, 0x61, 0x6c, 0x69, 0x7a, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x57, 0x68, 0x65, 0x72, 0x65, 0x44, 0x74, 0x6f, 0x12, 0x14, 0x0a, 0x05, 0x69, 0x73,
	0x41, 0x6c, 0x6c, 0x18, 0x64, 0x20, 0x01, 0x28, 0x08, 0x52, 0x05, 0x69, 0x73, 0x41, 0x6c, 0x6c,
	0x12, 0x1c, 0x0a, 0x09, 0x69, 0x73, 0x41, 0x6c, 0x6c, 0x4c, 0x61, 0x6e, 0x67, 0x18, 0x65, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x09, 0x69, 0x73, 0x41, 0x6c, 0x6c, 0x4c, 0x61, 0x6e, 0x67, 0x12, 0x24,
	0x0a, 0x0d, 0x69, 0x73, 0x41, 0x6c, 0x6c, 0x50, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x18,
	0x66, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0d, 0x69, 0x73, 0x41, 0x6c, 0x6c, 0x50, 0x6c, 0x61, 0x74,
	0x66, 0x6f, 0x72, 0x6d, 0x12, 0x22, 0x0a, 0x0c, 0x69, 0x73, 0x50, 0x6c, 0x61, 0x74, 0x66, 0x6f,
	0x72, 0x6d, 0x42, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0c, 0x69, 0x73, 0x50, 0x6c,
	0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x42, 0x65, 0x12, 0x22, 0x0a, 0x0c, 0x69, 0x73, 0x50, 0x6c,
	0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x46, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0c,
	0x69, 0x73, 0x50, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x46, 0x65, 0x12, 0x2c, 0x0a, 0x11,
	0x69, 0x73, 0x50, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x57, 0x65, 0x62, 0x73, 0x69, 0x74,
	0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x11, 0x69, 0x73, 0x50, 0x6c, 0x61, 0x74, 0x66,
	0x6f, 0x72, 0x6d, 0x57, 0x65, 0x62, 0x73, 0x69, 0x74, 0x65, 0x12, 0x24, 0x0a, 0x0d, 0x69, 0x73,
	0x50, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x41, 0x70, 0x70, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x0d, 0x69, 0x73, 0x50, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x41, 0x70, 0x70,
	0x12, 0x1a, 0x0a, 0x08, 0x69, 0x73, 0x4c, 0x61, 0x6e, 0x67, 0x45, 0x6e, 0x18, 0x0b, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x08, 0x69, 0x73, 0x4c, 0x61, 0x6e, 0x67, 0x45, 0x6e, 0x12, 0x1a, 0x0a, 0x08,
	0x69, 0x73, 0x4c, 0x61, 0x6e, 0x67, 0x4d, 0x73, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08,
	0x69, 0x73, 0x4c, 0x61, 0x6e, 0x67, 0x4d, 0x73, 0x12, 0x1a, 0x0a, 0x08, 0x69, 0x73, 0x4c, 0x61,
	0x6e, 0x67, 0x49, 0x64, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x69, 0x73, 0x4c, 0x61,
	0x6e, 0x67, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x69, 0x73, 0x4c, 0x61, 0x6e, 0x67, 0x54, 0x68,
	0x18, 0x0e, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x69, 0x73, 0x4c, 0x61, 0x6e, 0x67, 0x54, 0x68,
	0x12, 0x1a, 0x0a, 0x08, 0x69, 0x73, 0x4c, 0x61, 0x6e, 0x67, 0x48, 0x69, 0x18, 0x0f, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x08, 0x69, 0x73, 0x4c, 0x61, 0x6e, 0x67, 0x48, 0x69, 0x12, 0x1a, 0x0a, 0x08,
	0x69, 0x73, 0x4c, 0x61, 0x6e, 0x67, 0x5a, 0x68, 0x18, 0x10, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08,
	0x69, 0x73, 0x4c, 0x61, 0x6e, 0x67, 0x5a, 0x68, 0x22, 0x18, 0x0a, 0x16, 0x4c, 0x6f, 0x63, 0x61,
	0x6c, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x73, 0x68, 0x44,
	0x74, 0x6f, 0x32, 0xe1, 0x02, 0x0a, 0x0c, 0x4c, 0x6f, 0x63, 0x61, 0x6c, 0x69, 0x7a, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x12, 0x38, 0x0a, 0x03, 0x41, 0x64, 0x64, 0x12, 0x1d, 0x2e, 0x6c, 0x6f, 0x63,
	0x61, 0x6c, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x4c, 0x6f, 0x63, 0x61, 0x6c, 0x69,
	0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x74, 0x6f, 0x1a, 0x10, 0x2e, 0x63, 0x6f, 0x6d, 0x6d,
	0x6f, 0x6e, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x2b, 0x0a,
	0x06, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x12, 0x0d, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e,
	0x2e, 0x49, 0x64, 0x44, 0x74, 0x6f, 0x1a, 0x10, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x3b, 0x0a, 0x06, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x12, 0x1d, 0x2e, 0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x69, 0x7a, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x2e, 0x4c, 0x6f, 0x63, 0x61, 0x6c, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x44, 0x74, 0x6f, 0x1a, 0x10, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x28, 0x0a, 0x03, 0x47, 0x65, 0x74, 0x12, 0x0d,
	0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x49, 0x64, 0x44, 0x74, 0x6f, 0x1a, 0x10, 0x2e,
	0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x00, 0x12, 0x3e, 0x0a, 0x04, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x22, 0x2e, 0x6c, 0x6f, 0x63, 0x61,
	0x6c, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x4c, 0x6f, 0x63, 0x61, 0x6c, 0x69, 0x7a,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x57, 0x68, 0x65, 0x72, 0x65, 0x44, 0x74, 0x6f, 0x1a, 0x10, 0x2e,
	0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x00, 0x12, 0x43, 0x0a, 0x07, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x73, 0x68, 0x12, 0x24, 0x2e, 0x6c,
	0x6f, 0x63, 0x61, 0x6c, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x4c, 0x6f, 0x63, 0x61,
	0x6c, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x73, 0x68, 0x44,
	0x74, 0x6f, 0x1a, 0x10, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x42, 0x36, 0x5a, 0x34, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62,
	0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x63, 0x61, 0x72, 0x67, 0x6f, 0x64, 0x2d, 0x62, 0x6a, 0x2f, 0x62,
	0x32, 0x63, 0x2d, 0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2d,
	0x61, 0x70, 0x69, 0x2f, 0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x06,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_localization_localization_proto_rawDescOnce sync.Once
	file_localization_localization_proto_rawDescData = file_localization_localization_proto_rawDesc
)

func file_localization_localization_proto_rawDescGZIP() []byte {
	file_localization_localization_proto_rawDescOnce.Do(func() {
		file_localization_localization_proto_rawDescData = protoimpl.X.CompressGZIP(file_localization_localization_proto_rawDescData)
	})
	return file_localization_localization_proto_rawDescData
}

var file_localization_localization_proto_msgTypes = make([]protoimpl.MessageInfo, 3)
var file_localization_localization_proto_goTypes = []interface{}{
	(*LocalizationDto)(nil),        // 0: localization.LocalizationDto
	(*LocalizationWhereDto)(nil),   // 1: localization.LocalizationWhereDto
	(*LocalizationPublishDto)(nil), // 2: localization.LocalizationPublishDto
	(*common.IdDto)(nil),           // 3: common.IdDto
	(*common.Response)(nil),        // 4: common.Response
}
var file_localization_localization_proto_depIdxs = []int32{
	0, // 0: localization.Localization.Add:input_type -> localization.LocalizationDto
	3, // 1: localization.Localization.Delete:input_type -> common.IdDto
	0, // 2: localization.Localization.Update:input_type -> localization.LocalizationDto
	3, // 3: localization.Localization.Get:input_type -> common.IdDto
	1, // 4: localization.Localization.List:input_type -> localization.LocalizationWhereDto
	2, // 5: localization.Localization.Publish:input_type -> localization.LocalizationPublishDto
	4, // 6: localization.Localization.Add:output_type -> common.Response
	4, // 7: localization.Localization.Delete:output_type -> common.Response
	4, // 8: localization.Localization.Update:output_type -> common.Response
	4, // 9: localization.Localization.Get:output_type -> common.Response
	4, // 10: localization.Localization.List:output_type -> common.Response
	4, // 11: localization.Localization.Publish:output_type -> common.Response
	6, // [6:12] is the sub-list for method output_type
	0, // [0:6] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_localization_localization_proto_init() }
func file_localization_localization_proto_init() {
	if File_localization_localization_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_localization_localization_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LocalizationDto); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_localization_localization_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LocalizationWhereDto); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_localization_localization_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LocalizationPublishDto); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_localization_localization_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   3,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_localization_localization_proto_goTypes,
		DependencyIndexes: file_localization_localization_proto_depIdxs,
		MessageInfos:      file_localization_localization_proto_msgTypes,
	}.Build()
	File_localization_localization_proto = out.File
	file_localization_localization_proto_rawDesc = nil
	file_localization_localization_proto_goTypes = nil
	file_localization_localization_proto_depIdxs = nil
}
