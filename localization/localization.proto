syntax = "proto3";

package localization;

import "github.com/cargod-bj/b2c-proto-common/common/common.proto";

option go_package = "github.com/cargod-bj/b2c-localization-api/localProto";

/*
  获取本地化服务
 */
service Localization {
  // 新增本地化翻译，其中有部分不能指定，请参照LocalizationDto字段说明
  // response.Data = nil
  rpc Add(LocalizationDto) returns (common.Response) {}
  // 删除指定id的本地化翻译
  // response.Data = nil
  rpc Delete(common.IdDto) returns (common.Response) {}
  // 更新指定本地化翻译，其中有部分不能更新字段，请参照LocalizationDto字段说明
  // response.Data = nil
  rpc Update(LocalizationDto) returns (common.Response) {}
  // 获取指定id的本地化翻译
  // response.Data = LocalizationDto
  rpc Get(common.IdDto) returns (common.Response) {}
  // 获取指定规则的本地化内容
  // response.Data = common.PagedList {
  //      list = List<LocalizationDto>
  //    }
  rpc List(LocalizationWhereDto) returns (common.Response) {}
}

// 新增本地化翻译dto
message LocalizationDto {
  // id，如果为新增，则此字段为0，否则为id
  uint64 id = 1;
  // 创建时间，如果为新增，或更新，则此字段无效
  uint64 create_time = 2;
  // 更新时间，如果为新增，或更新，则此字段无效
  uint64 update_time = 3;
  // 当前key的描述信息, 如果为更新，则此字段无效
  string name = 4;
  // 当前翻译的key, 如果为更新，则此字段无效
  string key = 5;
  // 当前翻译的最大长度
  uint32 max_length = 6;
  // 是否后台可用
  uint32 flag_be = 7;
  // 是否前台可用
  uint32 flag_fe = 8;
  // 是否网站可用
  uint32 flag_website = 9;
  // 是否app可用
  uint32 flag_app = 10;
  // 当前翻译: 英语
  string value_en = 201;
  // 当前翻译: 马来语
  string value_ms = 202;
  // 当前翻译: 印度尼西亚语
  string value_id = 203;
  // 当前翻译: 泰语
  string value_th = 204;
  // 当前翻译: 印地语
  string value_hi = 205;
  // 当前翻译: 中文
  string value_zh = 206;
}

// 获取指定类型的所有dto
message LocalizationWhereDto {
  // 是否获取所有
  bool isAll = 100;
  // 是否获取后台内容
  bool isPlatformBe = 1;
  // 是否获取前台内容
  bool isPlatformFe = 2;
  // 是否获取网页端内容
  bool isPlatformWebsite = 3;
  // 是否获取app端内容
  bool isPlatformApp = 4;
  // 是否获取英语内容
  bool isLangEn = 11;
  // 是否获取马来语内容
  bool isLangMs = 12;
  // 是否获取印度尼西亚语内容
  bool isLangId = 13;
  // 是否获取泰语内容
  bool isLangTh = 14;
  // 是否获取印地语内容
  bool isLangHi = 15;
  // 是否获取中文内容
  bool isLangZh = 16;
}